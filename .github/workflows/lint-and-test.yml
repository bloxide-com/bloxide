# Copyright 2025 Bloxide, all rights reserved
name: Lint and Test Rust Backend

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - ".github/**"
      - "src/**"
      - "Cargo.*"
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  copyright_compliance:
    name: Check Copyright Compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Copyright Compliance
        run: |
          INCORRECT_COPYRIGHT=$(find . -name '*.rs' -not -path "./target/*" -o -name 'Cargo.toml' -not -path "./target/*" \
          | xargs grep -LE '(#|//) Copyright 202[0-9] Bloxide, all rights reserved')
          if [ -n "$INCORRECT_COPYRIGHT" ]; then
            echo "Incorrect copyright notice found:"
            echo "$INCORRECT_COPYRIGHT" | tr ' ' '\n'
            exit 1
          fi

  lint:
    name: Lint (Check with both default and embassy features)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install stable toolchain
        run: |
          rustup show
          rustup component add rustfmt clippy

      # Decide which Cargo flags to use based on matrix.feature-set
      - name: Cargo Build
        run: |
          echo "Building with default features..."
          cargo build

      - name: Cargo Format
        run: |
          cargo fmt -- --check

      - name: Cargo Clippy
        run: |
          cargo clippy --all-targets -- -W warnings -D warnings

  test:
    name: Test (Run coverage with both default and embassy features)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        feature-set: [ "default" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          cargo install cargo-tarpaulin

      - name: Show toolchain information
        run: |
          rustup toolchain list
          cargo --version

      - name: Run tests and report code coverage
        run: |
          echo "Testing with default features..."
          # If all tests pass in default mode:
          RUSTC_BOOTSTRAP=1 cargo tarpaulin -o xml -o lcov -o html --doc --tests

      - name: Upload coverage report (xml)
        uses: actions/upload-artifact@v4
        with:
          name: Test Coverage Results (xml)
          path: cobertura.xml

      - name: Upload coverage report (lcov)
        uses: actions/upload-artifact@v4
        with:
          name: Test Coverage Results (lcov)
          path: lcov.info

      - name: Upload coverage report (html)
        uses: actions/upload-artifact@v4
        with:
          name: Test Coverage Results (html)
          path: tarpaulin-report.html

  build-docs:
    name: Build documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Create Documentation for bloxide
        working-directory: ${{github.workspace}}
        run: RUSTDOCFLAGS=-Dwarnings cargo doc --workspace --no-deps
